version: '3.8'

services:

  gyani_postgres:
    image: postgres:15
    container_name: gyani_postgres
    environment:
      POSTGRES_DB: gyanibot_db
      POSTGRES_USER: gyaniuser
      POSTGRES_PASSWORD: gyanipass
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - gyanibot-net

  gyani_mongo:
    image: mongo:latest
    container_name: gyani_mongo
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    networks:
      - gyanibot-net

  gyani_app:
    build: .
    container_name: gyani_app
    ports:
      - "8080:8080"
    depends_on:
      - gyani_postgres
      - gyani_mongo
    environment:
      SPRING_PROFILES_ACTIVE: docker
    volumes:
      - ./logs:/app/logs
    networks:
      - gyanibot-net

  gyani_prometheus:
    image: prom/prometheus
    container_name: gyani_prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - gyanibot-net

  gyani_loki:
    image: grafana/loki:2.9.4
    container_name: gyani_loki
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - gyanibot-net

  gyani_promtail:
    image: grafana/promtail:2.9.4
    container_name: gyani_promtail
    volumes:
      - ./logs:/app/logs
      - ./promtail-config.yml:/etc/promtail/config.yml
    command: -config.file=/etc/promtail/config.yml
    networks:
      - gyanibot-net

  gyani_grafana:
    image: grafana/grafana
    container_name: gyani_grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    depends_on:
      - gyani_prometheus
      - gyani_loki
    networks:
      - gyanibot-net

volumes:
  postgres_data:
  mongo_data:
  grafana_data:

networks:
  gyanibot-net:
    driver: bridge
